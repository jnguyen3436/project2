{"version":3,"sources":["List.js","Home.jsx","Friend.js","App.js","serviceWorker.js","index.js"],"names":["List","state","theList","showTheList","map","profile","src","dog","width","alt","firstName","lastName","location","advice","gif","_url","axios","get","then","console","log","setState","data","this","Component","Home","info","getAdvice","slip","getAxios","url","theNameofState","getGIF","image_url","getInfo","getDog","getAll","postProfile","post","message","name","surname","region","window","alert","className","id","height","onClick","Friend","placeholder","App","to","color","path","component","delete","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f69d962.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class List extends Component {\n    state = {theList:[]}\ncomponentDidMount(){\n    \n        axios.get(\"https://ironrest.herokuapp.com/johnny\",).then(profile=>{\n          console.log(profile)\n          this.setState({theList:profile.data})\n        })\n    \n}\n    showTheList=()=>{\n        \n      return this.state.theList.map(profile=>{\n          return(\n              \n              <div>\n                  <div>-----------------------------------------------</div>\n              <img src={profile.dog} width=\"200px\" alt={profile.firstName}/>\n              <h4>{profile.firstName}  {profile.lastName}</h4>\n              <h6>{profile.location}</h6>\n              <h5>{profile.advice}</h5>\n                    <img src={profile.gif} alt={profile._url}/>\n                  <div>-----------------------------------------------</div>\n              </div>\n              \n          )\n      })\n\n    }\n    \n\n  render() {\n      return (\n          <div>\n              \n              Friends\n              {this.showTheList()} \n          </div>\n      )\n  }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\n//import GetAxios from './GetAxios'\n\n\n\n\nexport default class Home extends Component {\n    state ={\n        advice :[],\n        gif:null,\n        info:[],\n        dog:[]\n      }\n\n      componentDidMount(){\n        axios.get(\"https://api.adviceslip.com/advice\").then(advice=>{\n          this.setState({advice:advice.data.slip})\n          \n          console.log(advice.data.slip)\n            \n          this.getGIF()\n          this.getInfo()\n          this.getDog()\n        })\n\n        \n      }\n\n\n//\"https://api.adviceslip.com/advice\"\ngetAdvice=()=>{\n    axios.get(\"https://api.adviceslip.com/advice\").then(advice=>{\n      this.setState({advice:advice.data.slip})\n      \n      console.log(advice.data.slip)\n     \n     })\n      \n    }\n  getAxios=(url,theNameofState)=> {\n\n    axios.get(url).then(advice=>{\n        this.setState({theNameofState:theNameofState.data})\n        \n        console.log(theNameofState)\n      \n        \n      })\n    \n    }\n    getGIF=()=>{\n      axios.get(\"https://api.giphy.com/v1/gifs/random?api_key=TdJwdGZNyu4K69K0Cha5IMjFM4LMz45L&tag=&rating=G&&fixed_width\").then(gif=>{\n        \n        this.setState({gif:gif.data.data.image_url})\n        \n          console.log(gif, gif.data.data.url)\n        \n       })\n        \n      }\n\n      //https://uinames.com/api/\n\n      getInfo=()=>{\n        axios.get(\"https://uinames.com/api/\").then(info=>{\n          this.setState({info:info.data})\n          \n          console.log(this.state.info)\n         \n         })\n          \n        }\n\n        //https://dog.ceo/api/breeds/image/random\n        getDog=()=>{\n          axios.get(\"https://dog.ceo/api/breeds/image/random\").then(dog=>{\n            this.setState({dog:dog.data})\n            \n            console.log(this.state.dog)\n           \n           })\n            \n          }\n\n         getAll=()=>{\n           this.getAdvice()\n           this.getInfo()\n           this.getDog()\n           this.getGIF()\n         } \n\n         postProfile=()=>{\n          axios.post(\"https://ironrest.herokuapp.com/johnny/\",\n          {\n            dog:this.state.dog.message,\n            firstName:this.state.info.name,\n            lastName:this.state.info.surname,\n            location:this.state.info.region,\n            advice:this.state.advice.advice,\n            gif:this.state.gif\n\n\n         })\n         window.alert(\"Friend Added\");\n         this.getAll();\n        }\n   \n\n  render() {\n    return (\n      <div className=\"Home\">\n          {/* {this.state.gif} */}\n          <img src={this.state.gif}  alt = \"thegif\"/>\n\n        \n        <img id=\"dog\" height =\"300px\" src={this.state.dog.message} alt =\"doggo\"/>\n        <div id=\"name\">First name :{this.state.info.name}</div>\n        <div id=\"lastname\">Last name : {this.state.info.surname}</div>\n        <div id=\"region\">From : {this.state.info.region}</div>\n        <div id=\"advice\"> Advice: {this.state.advice.advice}</div> \n\n        <div>\n        <button onClick={this.getAll}>Click Here !!!</button>\n        <button onClick={this.postProfile}>Add Friend!!</button>\n        </div>\n        \n        \n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Friend extends Component {\n    render() {\n        return (\n            <div>\n                <form>\n                    <input placeholder=\"First Name\"/>\n                    <input placeholder=\"Last Name\"/>\n                    <input placeholder=\"Advice\"/>\n                    <input placeholder=\"Image URL\"/>\n                    <input placeholder=\"GIPHY Gif URL\"/>\n                </form>\n                helo\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport {Link,Switch,Route} from 'react-router-dom'\nimport List from './List'\nimport Home from \"./Home\"\nimport Friend from \"./Friend\"\nexport default class App extends Component {\n \n\n  render() {\n    return (\n      <div className=\"App\">\n\n\n        <nav  className=\"navbar navbar-light\" >Fake friend generator!!      \n        <Link to=\"/list\" className=\"a\" color=\"white\">Friends List </Link>\n        <Link to=\"/friend\">Create a Friend</Link>\n        <Link to=\"/home\"> Friend Generator</Link>\n         </nav>\n        \n        \n        <Switch>\n          <Route path= \"/home\" component={Home}/>\n          <Route path= \"/friend\" component={Friend}/>\n          <Route path= \"/list\" component={List} />\n          </Switch>\n\n      </div>\n    )\n  }\n}\n  \n\n\naxios.delete(\"https://ironrest.herokuapp.com/johnny/5dd6af67aa6dd300172da7bc\")","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n<BrowserRouter>\n<App />\n</BrowserRouter>\n    \n    \n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}